# syntax=docker/dockerfile:experimental
FROM rapidsai/ci-conda:cuda12.8.0-ubuntu22.04-py3.12
ARG ARCH
ARG SM
ARG INSTALL_XGBOOST
ARG XGBOOST_REPO
ARG XGBOOST_CHECKOUT

ENV DEBIAN_FRONTEND noninteractive
SHELL ["/bin/bash", "-c"]

RUN set -x \
    # basic dependencies
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/3bf863cc.pub && \
    apt-get update && apt-get upgrade -y && \
    apt-get install gosu numactl -y

RUN \
    # mamba installation dependencies
    apt-get install unzip bzip2 curl -y

RUN mkdir ws

COPY dxgb_bench/dev/xgboost_dev.yml ws/xgboost_dev.yml
COPY dxgb_bench/dev/xgboost_aarch_dev.yml ws/xgboost_aarch_dev.yml
COPY dxgb_bench/dev/install_nsight.sh ws/install_nsight.sh

RUN \
    cd ws && \
    ./install_nsight.sh $ARCH && \
    cd -

COPY dxgb_bench/dev/build_conda_env.sh ws/build_conda_env.sh

RUN --mount=type=cache,target=/opt/conda/pkgs /ws/build_conda_env.sh $ARCH

COPY dxgb_bench/dev/clone_xgboost.sh ws/clone_xgboost.sh
COPY dxgb_bench/dev/install_xgboost.sh ws/install_xgboost.sh
COPY dxgb_bench/dev/build_dxgb_bench.sh ws/build_dxgb_bench.sh

RUN \
    cd /ws/ && \
    ./clone_xgboost.sh ${INSTALL_XGBOOST} ${XGBOOST_REPO} ${XGBOOST_CHECKOUT}

RUN \
    cd /ws/ && \
    echo "CONDA_ENV ${CONDA_PREFIX}" && \
    ./install_xgboost.sh ${INSTALL_XGBOOST} ${SM}

COPY dxgb_bench ws/dxgb_bench

RUN \
    cd /ws/ && \
    ./build_dxgb_bench.sh

RUN \
    apt-get install time -y
