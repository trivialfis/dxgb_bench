# syntax=docker/dockerfile:experimental
FROM rapidsai/ci-conda:cuda12.8.0-ubuntu22.04-py3.12
ARG ARCH
ARG SM
ARG INSTALL_XGBOOST

ENV DEBIAN_FRONTEND noninteractive
SHELL ["/bin/bash", "-c"]

RUN set -x \
    # basic dependencies
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/3bf863cc.pub && \
    apt-get update && apt-get upgrade -y && \
    apt-get install gosu -y

RUN \
    # mamba installation dependencies
    apt-get install unzip bzip2 curl -y

RUN mkdir ws

COPY dxgb_bench/dev/xgboost_dev.yml ws/xgboost_dev.yml
COPY dxgb_bench/dev/xgboost_aarch_dev.yml ws/xgboost_aarch_dev.yml
COPY dxgb_bench/dev/install_nsight.sh ws/install_nsight.sh

RUN \
    cd ws && \
    ./install_nsight.sh $ARCH && \
    cd -

RUN --mount=type=cache,target=/opt/conda/pkgs \
    case $ARCH in \
	aarch) \
            echo "Build x86 conda environment." \
	    mamba env update -n base -f ws/xgboost_aarch_dev.yml -v && mamba clean --all --yes \
	    ;; \
	x86) \
            echo "Build aarch64 conda environment." \
	    mamba env update -n base -f ws/xgboost_dev.yml -v && mamba clean --all --yes \
	    ;; \
	*) \
	    echo "Invalid option. Expected [aarch|x86]."\
	    exit -1 \
	    ;; \
    esac

COPY dxgb_bench/dev/clone_xgboost.sh ws/clone_xgboost.sh
COPY dxgb_bench/dev/build_dxgb_bench.sh ws/build_dxgb_bench.sh

RUN \
    ./dxgb_bench/dev/clone_xgboost.sh ${INSTALL_XGBOOST}

RUN \
    ./dxgb_bench/dev/install_xgboost.sh ${INSTALL_XGBOOST}

RUN \
    cd /ws/build && \
    time ninja

RUN \
    cd /ws/xgboost/python-package && \
    pip install . --no-deps --no-build-isolation

COPY dxgb_bench ws/dxgb_bench

RUN \
    cd /ws/ && \
    ./build_dxgb_bench.sh
